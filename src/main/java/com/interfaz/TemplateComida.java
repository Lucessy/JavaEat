/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.interfaz;

import com.clases.CarritoCompra;
import com.clases.Cliente;
import com.clases.Comida;
import com.clases.MainManager;
import com.clases.Menu;
import com.clases.Restaurante;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;


public class TemplateComida extends javax.swing.JPanel {

    private Comida comida;
    private Menu menu;
    private int cantidad = 0;
    private CarritoCompra carrito;
    private VerRestaurante padre;

    /**
     * Creates new form TemplateComida
     */
    public TemplateComida(VerRestaurante padre) {
        initComponents();
        jIngredientes.setLineWrap(true);
        jIngredientes.setWrapStyleWord(true);
        this.padre = padre;
        this.carrito = MainManager.getCarritoCompra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        precio = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        jCantidad = new javax.swing.JLabel();
        jButtonMenos = new javax.swing.JButton();
        jButtonMas = new javax.swing.JButton();
        titulo = new javax.swing.JTextArea();
        ingredientes = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jIngredientes = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(280, 335));
        setMinimumSize(new java.awt.Dimension(280, 335));
        setPreferredSize(new java.awt.Dimension(280, 335));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        precio.setFont(new java.awt.Font("Roboto Light", 2, 30)); // NOI18N
        precio.setForeground(new java.awt.Color(0, 0, 0));
        precio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        precio.setText("3.99€");
        precio.setToolTipText("");
        add(precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 120, 30));

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cachoPower.jpg"))); // NOI18N
        add(icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 160));

        jCantidad.setFont(new java.awt.Font("Roboto Condensed Light", 0, 24)); // NOI18N
        jCantidad.setForeground(new java.awt.Color(102, 102, 102));
        jCantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCantidad.setText("0");
        add(jCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 50, 30));

        jButtonMenos.setBackground(new java.awt.Color(255, 186, 186));
        jButtonMenos.setFont(new java.awt.Font("Roboto Condensed Light", 1, 36)); // NOI18N
        jButtonMenos.setForeground(new java.awt.Color(51, 51, 51));
        jButtonMenos.setText("-");
        jButtonMenos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenosActionPerformed(evt);
            }
        });
        add(jButtonMenos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 30, 30));

        jButtonMas.setBackground(new java.awt.Color(206, 255, 206));
        jButtonMas.setFont(new java.awt.Font("Roboto Condensed Light", 1, 24)); // NOI18N
        jButtonMas.setForeground(new java.awt.Color(51, 51, 51));
        jButtonMas.setText("+");
        jButtonMas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMasActionPerformed(evt);
            }
        });
        add(jButtonMas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 30, 30));

        titulo.setEditable(false);
        titulo.setBackground(new java.awt.Color(255, 255, 255));
        titulo.setColumns(20);
        titulo.setFont(new java.awt.Font("Roboto Condensed", 1, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(0, 0, 0));
        titulo.setRows(5);
        titulo.setText("CACHO POWER ");
        add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 250, 30));

        ingredientes.setBackground(new java.awt.Color(51, 51, 51));
        ingredientes.setFont(new java.awt.Font("Roboto Condensed", 1, 14)); // NOI18N
        ingredientes.setForeground(new java.awt.Color(51, 51, 51));
        ingredientes.setText("Ingredientes:");
        add(ingredientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 20));
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 160));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jIngredientes.setEditable(false);
        jIngredientes.setBackground(new java.awt.Color(255, 255, 255));
        jIngredientes.setColumns(20);
        jIngredientes.setForeground(new java.awt.Color(51, 51, 51));
        jIngredientes.setRows(5);
        jScrollPane1.setViewportView(jIngredientes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 240, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenosActionPerformed
        restCantidad();
    }//GEN-LAST:event_jButtonMenosActionPerformed

    private void jButtonMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMasActionPerformed
        addCantidad();
    }//GEN-LAST:event_jButtonMasActionPerformed

    public void setImage(ImageIcon image) {
        icon.setIcon(image);
    }

    public void setComida(Comida comida) {
        this.comida = comida;
    }

    public void setMenu(Menu menu) {
        this.menu = menu;
    }

    public void setPrecio(double precio1) {
        precio.setText(String.valueOf(precio1) + "€");
    }

    public void setTitulo(String title) {
        titulo.setText(title);
    }

    public JLabel getIcon() {
        return icon;
    }

    public void setIngredientes(String texto) {
        jIngredientes.setText(texto);
    }

    public void setTituloIngrediente(String titulo) {
        ingredientes.setText(titulo);
    }

    public void addCantidad() {
        cantidad += 1;
        jCantidad.setText(String.valueOf(cantidad));
        boolean comidaNueva = true;
        boolean menuNuevo = true;
        if (null != comida) {
            if (!carrito.getComidas().isEmpty()) {
                for (Comida comidaCarrito : carrito.getComidas()) {
                    if (comidaCarrito.getId() == comida.getId()) {
                        comida.setCantidad(cantidad);
                        comidaNueva = false;
                        break;
                    }
                }
                if (comidaNueva) {
                    comida.setCantidad(cantidad);
                    carrito.addComida(comida);
                }
                padre.actualizarListaCarrito(carrito);
            } else {
                comida.setCantidad(cantidad);
                carrito.addComida(comida);
                padre.actualizarListaCarrito(carrito);
            }
            

        } else {
            if (!carrito.getMenus().isEmpty()) {
                for (Menu menuCarrito : carrito.getMenus()) {
                    if (menuCarrito.getId() == menu.getId()) {
                        menu.setCantidad(cantidad);
                        menuNuevo = false;
                        break;
                    }
                }
                if (menuNuevo) {
                    menu.setCantidad(cantidad);
                    carrito.addMenu(menu);
                }
                padre.actualizarListaCarrito(carrito);
            } else {
                menu.setCantidad(cantidad);
                carrito.addMenu(menu);
                padre.actualizarListaCarrito(carrito);
            }
        }

    }

    public void restCantidad() {

        if (cantidad > 0) {
            cantidad -= 1;
            jCantidad.setText(String.valueOf(cantidad));
            if (null != comida) {

                for (Comida comidaCarrito : carrito.getComidas()) {
                    if (comidaCarrito.getId() == comida.getId()) {
                        if(comida.getCantidad() == 1){
                            comida.setCantidad(cantidad);
                            carrito.getComidas().remove(comidaCarrito);
                        }
                        comida.setCantidad(cantidad);
                        break;
                    }
                }
                padre.actualizarListaCarrito(carrito);

            } else {

                for (Menu menuCarrito : carrito.getMenus()) {
                    if (menuCarrito.getId() == menu.getId()) {
                        if(menu.getCantidad() == 1){
                            menu.setCantidad(cantidad);
                            carrito.getMenus().remove(menuCarrito);
                        }
                        menu.setCantidad(cantidad);
                        break;
                    }
                }
                padre.actualizarListaCarrito(carrito);

            }
        } else {
            if (null != comida) {
                JOptionPane.showMessageDialog(this, "No se pueden quitar más comidas", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "No se pueden quitar más menus", "Error", JOptionPane.ERROR_MESSAGE);

            }
        }
    }

    public void setImageFromPath(String path) {
        ImageIcon imagen = Comida.resizedIcon(icon.getBounds().width, icon.getBounds().height, path);
        icon.setIcon(imagen);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel icon;
    private javax.swing.JLabel ingredientes;
    private javax.swing.JButton jButtonMas;
    private javax.swing.JButton jButtonMenos;
    private javax.swing.JLabel jCantidad;
    private javax.swing.JTextArea jIngredientes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel precio;
    private javax.swing.JTextArea titulo;
    // End of variables declaration//GEN-END:variables
}
