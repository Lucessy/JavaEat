/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.interfaz;

import com.clases.Catering;
import com.clases.Cliente;
import com.clases.ClienteParticular;
import com.clases.Comida;
import com.clases.Direccion;
import com.clases.Empresa;
import com.clases.MainManager;
import com.clases.Menu;
import com.clases.Restaurante;
import com.clases.Venta;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.filechooser.FileNameExtensionFilter;

public class AltaRestaurante extends javax.swing.JFrame {

    private String nombreFotografia;
    private int xMouse, yMouse;
    private boolean addComida;
    private boolean ofreceCatering;
    private ArrayList<Comida> comidas;
    private ArrayList<Menu> menus;
    private boolean nuevoRestaurante;
    private Restaurante restauranteActual;

    /**
     * Creates new form AltaRestaurante
     *
     * @param restauranteActual
     * @param nuevoRestaurante
     */
    public AltaRestaurante(Restaurante restauranteActual, boolean nuevoRestaurante) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         
For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */

        try {
            javax.swing.UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            System.err.println("Failed to initialize LaF");

            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    System.out.println(info.getName());
                    if ("Flatlaf".equals(info.getName())) {
                        System.out.println("Flatlaf look and feel stablished");
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
        //</editor-fold> //Establece el Flat-Laf look and feel (Dependencia)
        initComponents();
        //actualizarDatos(restaurante);
        //actualizarComidas(restaurante.getComidas());
        this.nuevoRestaurante = nuevoRestaurante;
        this.restauranteActual = restauranteActual;
        this.setLocationRelativeTo(null);
        if (nuevoRestaurante) {
            comidas = new ArrayList<>();
            menus = new ArrayList<>();
            jRestaurante.setText("Restaurante " + String.valueOf(MainManager.getAvailableId()));
            jScrollComida.setVisible(false);
            jTextArea1.setVisible(false);
            jSeparadorPrecio.setVisible(false);
            jPrecio.setVisible(false);
            txtPrecio.setVisible(false);
        } else {
            rellenarDatos(restauranteActual);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        exitpanel = new javax.swing.JPanel();
        txtexit = new javax.swing.JLabel();
        javaeatlogo1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRestaurante = new javax.swing.JLabel();
        jButtonGuardar1 = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        txtCategoria = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JLabel();
        txtCif = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListComidas = new javax.swing.JList<>();
        jCatering = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JLabel();
        txtCodPostal = new javax.swing.JLabel();
        txtNum = new javax.swing.JLabel();
        txtCalle = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jSeparadorPrecio = new javax.swing.JSeparator();
        jPrecio = new javax.swing.JFormattedTextField();
        txtGastos = new javax.swing.JLabel();
        txtTiempo = new javax.swing.JLabel();
        jNombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jCalle = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        jCiudad = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jIcon = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCodPostal = new javax.swing.JFormattedTextField();
        jGastos = new javax.swing.JFormattedTextField();
        jCif = new javax.swing.JFormattedTextField();
        jNum = new javax.swing.JFormattedTextField();
        jTiempo = new javax.swing.JFormattedTextField();
        jButtonAnadirImagen = new javax.swing.JButton();
        jScrollComida = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonEliminarComida = new javax.swing.JButton();
        jButtonAnadir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListMenus = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jButtonEliminarMenu = new javax.swing.JButton();
        jButtonAnadirMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 102));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(255, 153, 102));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        exitpanel.setBackground(new java.awt.Color(255, 153, 102));

        txtexit.setBackground(new java.awt.Color(0, 0, 0));
        txtexit.setFont(new java.awt.Font("Roboto Thin", 1, 24)); // NOI18N
        txtexit.setForeground(new java.awt.Color(0, 0, 0));
        txtexit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtexit.setText("X");
        txtexit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtexit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtexitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtexitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtexitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitpanelLayout = new javax.swing.GroupLayout(exitpanel);
        exitpanel.setLayout(exitpanelLayout);
        exitpanelLayout.setHorizontalGroup(
            exitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitpanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtexit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        exitpanelLayout.setVerticalGroup(
            exitpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtexit, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        javaeatlogo1.setFont(new java.awt.Font("Roboto Condensed", 1, 36)); // NOI18N
        javaeatlogo1.setForeground(new java.awt.Color(255, 102, 0));
        javaeatlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/otro/javaEatLogo2.png"))); // NOI18N

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap(437, Short.MAX_VALUE)
                .addComponent(javaeatlogo1)
                .addGap(419, 419, 419)
                .addComponent(exitpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(exitpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(javaeatlogo1))
        );

        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 40));

        jPanel1.setBackground(new java.awt.Color(255, 153, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 600));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1000, 600));
        bg.setMinimumSize(new java.awt.Dimension(1000, 600));
        bg.setPreferredSize(new java.awt.Dimension(1000, 600));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));

        jRestaurante.setFont(new java.awt.Font("Roboto Condensed Light", 0, 36)); // NOI18N
        jRestaurante.setForeground(new java.awt.Color(51, 51, 51));
        jRestaurante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jRestaurante.setText("Restaurante 1");

        jButtonGuardar1.setBackground(new java.awt.Color(255, 118, 41));
        jButtonGuardar1.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonGuardar1.setForeground(new java.awt.Color(51, 51, 51));
        jButtonGuardar1.setText("GUARDAR");
        jButtonGuardar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButtonGuardar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardar1ActionPerformed(evt);
            }
        });

        jButtonEliminar.setBackground(new java.awt.Color(255, 118, 41));
        jButtonEliminar.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonEliminar.setForeground(new java.awt.Color(51, 51, 51));
        jButtonEliminar.setText("ELIMINAR");
        jButtonEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButtonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonCancelar.setBackground(new java.awt.Color(255, 118, 41));
        jButtonCancelar.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonCancelar.setForeground(new java.awt.Color(51, 51, 51));
        jButtonCancelar.setText("CANCELAR");
        jButtonCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButtonCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jRestaurante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 378, Short.MAX_VALUE)
                .addComponent(jButtonGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRestaurante))
                .addContainerGap())
        );

        bg.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1010, -1));

        txtCategoria.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtCategoria.setForeground(new java.awt.Color(0, 0, 0));
        txtCategoria.setText("Especialidad:");
        bg.add(txtCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 90, 20));

        jLabel6.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Datos del Restaurante");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 170, 20));

        txtNombre.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(0, 0, 0));
        txtNombre.setText("Nombre:");
        bg.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 60, 20));

        txtCif.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtCif.setForeground(new java.awt.Color(0, 0, 0));
        txtCif.setText("CIF:");
        bg.add(txtCif, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 30, 20));

        jScrollPane1.setBackground(new java.awt.Color(187, 187, 187));

        jListComidas.setBackground(new java.awt.Color(204, 218, 234));
        jListComidas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jListComidas.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jListComidas.setForeground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setViewportView(jListComidas);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 260, 430));

        jCatering.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jCatering.setForeground(new java.awt.Color(0, 0, 0));
        jCatering.setText("Servicio Catering");
        jCatering.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jCatering, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 130, 20));

        jLabel7.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Añadir imagen:");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 140, 20));

        txtPrecio.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(51, 51, 51));
        txtPrecio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtPrecio.setText("Precio (€):");
        bg.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, -1, 20));

        txtCodPostal.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtCodPostal.setForeground(new java.awt.Color(0, 0, 0));
        txtCodPostal.setText("Código Postal:");
        bg.add(txtCodPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 110, 20));

        txtNum.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtNum.setForeground(new java.awt.Color(0, 0, 0));
        txtNum.setText("Nº:");
        bg.add(txtNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 30, 20));

        txtCalle.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtCalle.setForeground(new java.awt.Color(0, 0, 0));
        txtCalle.setText("Calle:");
        bg.add(txtCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 50, 20));

        txtCiudad.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtCiudad.setForeground(new java.awt.Color(0, 0, 0));
        txtCiudad.setText("Ciudad:");
        bg.add(txtCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 60, 20));

        jLabel5.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Dirección del Restaurante");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 200, 20));

        jCheckBox1.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox1.setText("Cocineros");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        bg.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 100, -1));

        jCheckBox2.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox2.setText("Camareros");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        bg.add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 110, -1));

        jCheckBox3.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox3.setText("Comida a Proporcionar");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        bg.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 180, 20));

        jCheckBox4.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox4.setText("Espacio Privado");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        bg.add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        jCheckBox5.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        jCheckBox5.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox5.setText("Decoración");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        bg.add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 110, -1));

        jSeparadorPrecio.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparadorPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 80, 10));

        jPrecio.setBackground(new java.awt.Color(204, 218, 234));
        jPrecio.setBorder(null);
        jPrecio.setForeground(new java.awt.Color(51, 51, 51));
        jPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrecioActionPerformed(evt);
            }
        });
        bg.add(jPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 80, -1));

        txtGastos.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtGastos.setForeground(new java.awt.Color(0, 0, 0));
        txtGastos.setText("Gastos de Envío (€):");
        bg.add(txtGastos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 130, 20));

        txtTiempo.setFont(new java.awt.Font("Roboto Condensed", 0, 16)); // NOI18N
        txtTiempo.setForeground(new java.awt.Color(0, 0, 0));
        txtTiempo.setText("Tiempo de envío (Minutos):");
        bg.add(txtTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 190, 20));

        jNombre.setBackground(new java.awt.Color(204, 218, 234));
        jNombre.setBorder(null);
        bg.add(jNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 230, -1));
        bg.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 230, 10));
        bg.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 150, 10));
        bg.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 80, 10));
        bg.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 80, 10));
        bg.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 290, 10));

        jCalle.setBackground(new java.awt.Color(204, 218, 234));
        jCalle.setBorder(null);
        jCalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCalleActionPerformed(evt);
            }
        });
        bg.add(jCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 290, -1));
        bg.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 90, 10));

        jCiudad.setBackground(new java.awt.Color(204, 218, 234));
        jCiudad.setBorder(null);
        bg.add(jCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 180, -1));
        bg.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 180, 10));
        bg.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 90, 10));

        jLabel8.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Añadir comidas:");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 60, 140, 20));

        jPanel3.setBackground(new java.awt.Color(204, 218, 234));
        jPanel3.setMaximumSize(new java.awt.Dimension(373, 142));
        jPanel3.setMinimumSize(new java.awt.Dimension(373, 142));

        jIcon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
        );

        bg.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 350, -1));

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setForeground(new java.awt.Color(102, 102, 102));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Internacional", "Mediterránea", "Sushi", "Comida India", "Comida Callejera", "Vegetariana", "Vegana" }));
        bg.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 180, -1));

        jCodPostal.setBackground(new java.awt.Color(204, 218, 234));
        jCodPostal.setBorder(null);
        jCodPostal.setForeground(new java.awt.Color(51, 51, 51));
        try {
            jCodPostal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCodPostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCodPostalActionPerformed(evt);
            }
        });
        bg.add(jCodPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 90, -1));

        jGastos.setBackground(new java.awt.Color(204, 218, 234));
        jGastos.setBorder(null);
        jGastos.setForeground(new java.awt.Color(51, 51, 51));
        jGastos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jGastos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGastosActionPerformed(evt);
            }
        });
        bg.add(jGastos, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 80, -1));

        jCif.setBackground(new java.awt.Color(204, 218, 234));
        jCif.setBorder(null);
        jCif.setForeground(new java.awt.Color(51, 51, 51));
        try {
            jCif.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCifActionPerformed(evt);
            }
        });
        bg.add(jCif, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 150, -1));

        jNum.setBackground(new java.awt.Color(204, 218, 234));
        jNum.setBorder(null);
        jNum.setForeground(new java.awt.Color(51, 51, 51));
        jNum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNumActionPerformed(evt);
            }
        });
        bg.add(jNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 90, -1));

        jTiempo.setBackground(new java.awt.Color(204, 218, 234));
        jTiempo.setBorder(null);
        jTiempo.setForeground(new java.awt.Color(51, 51, 51));
        jTiempo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTiempoActionPerformed(evt);
            }
        });
        bg.add(jTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 80, -1));

        jButtonAnadirImagen.setBackground(new java.awt.Color(164, 204, 222));
        jButtonAnadirImagen.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonAnadirImagen.setForeground(new java.awt.Color(51, 51, 51));
        jButtonAnadirImagen.setText("AÑADIR");
        jButtonAnadirImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAnadirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirImagenActionPerformed(evt);
            }
        });
        bg.add(jButtonAnadirImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 100, 20));

        jTextArea1.setBackground(new java.awt.Color(204, 218, 234));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setRows(5);
        jScrollComida.setViewportView(jTextArea1);

        bg.add(jScrollComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 210, 60));

        jButtonEliminarComida.setBackground(new java.awt.Color(255, 75, 73));
        jButtonEliminarComida.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonEliminarComida.setForeground(new java.awt.Color(51, 51, 51));
        jButtonEliminarComida.setText("ELIMINAR");
        jButtonEliminarComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarComidaActionPerformed(evt);
            }
        });
        bg.add(jButtonEliminarComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 530, 140, 20));

        jButtonAnadir.setBackground(new java.awt.Color(164, 204, 222));
        jButtonAnadir.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonAnadir.setForeground(new java.awt.Color(51, 51, 51));
        jButtonAnadir.setText("AÑADIR");
        jButtonAnadir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirActionPerformed(evt);
            }
        });
        bg.add(jButtonAnadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 60, 110, 20));

        jScrollPane2.setBackground(new java.awt.Color(187, 187, 187));

        jListMenus.setBackground(new java.awt.Color(204, 218, 234));
        jListMenus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jListMenus.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jListMenus.setForeground(new java.awt.Color(51, 51, 51));
        jScrollPane2.setViewportView(jListMenus);

        bg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, 260, 230));

        jLabel9.setFont(new java.awt.Font("Roboto Condensed Light", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Añadir menús:");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 140, -1));

        jButtonEliminarMenu.setBackground(new java.awt.Color(255, 75, 73));
        jButtonEliminarMenu.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonEliminarMenu.setForeground(new java.awt.Color(51, 51, 51));
        jButtonEliminarMenu.setText("ELIMINAR");
        jButtonEliminarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEliminarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarMenuActionPerformed(evt);
            }
        });
        bg.add(jButtonEliminarMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 530, 140, 20));

        jButtonAnadirMenu.setBackground(new java.awt.Color(164, 204, 222));
        jButtonAnadirMenu.setFont(new java.awt.Font("Roboto Condensed", 2, 16)); // NOI18N
        jButtonAnadirMenu.setForeground(new java.awt.Color(51, 51, 51));
        jButtonAnadirMenu.setText("AÑADIR");
        jButtonAnadirMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAnadirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirMenuActionPerformed(evt);
            }
        });
        bg.add(jButtonAnadirMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 260, 110, 20));

        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1000, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        MainManager.showFrame("Administrador");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    public ArrayList<Comida> getComidas() {
        return comidas;
    }
    
    public Restaurante getRestaurante() {
        return restauranteActual;
    }

    private void rellenarDatos(Restaurante restaurante) {
        nombreFotografia = restaurante.getNombreFotografia();
        //Datos Empresa
        jNombre.setText(restaurante.getNombre());
        jCif.setText(restaurante.getCif());
        jTiempo.setText(String.valueOf(restaurante.getTiempoEnvio()));
        jGastos.setText(String.valueOf(restaurante.getGastosEnvio()));
        jComboBox1.setSelectedItem(restaurante.getEspecialidad());

        //Dirección
        jCalle.setText(restaurante.getDireccion().getCalle());
        jNum.setText(restaurante.getDireccion().getNumero());
        jCodPostal.setText(restaurante.getDireccion().getCodigoPostal());
        jCiudad.setText(restaurante.getDireccion().getCiudad());

        //Catering
        jCheckBox1.setSelected(restaurante.getCatering().isCocineros());
        jCheckBox2.setSelected(restaurante.getCatering().isCamareros());

        jCheckBox4.setSelected(restaurante.getCatering().isEspacioPrivado());
        jCheckBox5.setSelected(restaurante.getCatering().isDecoracion());

        if (!restaurante.getCatering().getComidaAProporcionar().equals(" ")) {
            jCheckBox3.setSelected(true);
            jScrollComida.setVisible(true);
            jTextArea1.setVisible(true);
            jSeparadorPrecio.setVisible(true);
            jPrecio.setVisible(true);
            txtPrecio.setVisible(true);
            jTextArea1.setText(restaurante.getCatering().getComidaAProporcionar());
            jPrecio.setText(String.valueOf(restaurante.getCatering().getPrecioComida()));
        } else {
            jCheckBox3.setSelected(false);
            jScrollComida.setVisible(false);
            jTextArea1.setVisible(false);
            jSeparadorPrecio.setVisible(false);
            jPrecio.setVisible(false);
            txtPrecio.setVisible(false);
        }
        //Foto
        String path = restaurante.getNombreFotografia();
        ImageIcon icon = Restaurante.resizedIcon(jIcon.getBounds().width, jIcon.getBounds().height, path);
        if (icon != null) {
            jIcon.setIcon(icon);
        }

        //Comidas
        comidas = restaurante.getComidas();
        updateListaComidas();

        //Menus
        menus = restaurante.getMenus();
        updateListaMenus();

    }

    private void jButtonGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardar1ActionPerformed
        Catering cat;
        //Datos Restaurante
        String nombre = jNombre.getText();
        String cif = jCif.getText();
        String tiempoTemp = jTiempo.getText();
        String gastosTemp = jGastos.getText();
        String especialidad = jComboBox1.getItemAt(jComboBox1.getSelectedIndex());
        System.out.println(especialidad);

        //Dirección
        String calle = jCalle.getText();
        String num = jNum.getText();
        String codPostal = jCodPostal.getText();
        String ciudad = jCiudad.getText();

        //Verificar campos
        if (nombre.isEmpty() || cif.isEmpty() || tiempoTemp.isEmpty() || gastosTemp.isEmpty() || calle.isEmpty() || num.isEmpty() || codPostal.isEmpty() || ciudad.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Double gastos = MainManager.verificaPrecio(gastosTemp);
        int tiempo = MainManager.verificaTiempo(tiempoTemp);
        if (gastos < 0.0 || tiempo < 0.0) {
            JOptionPane.showMessageDialog(this, "Por favor, introduzca un gasto/tiempo de envío válido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Catering
        if (!jCheckBox1.isSelected() && !jCheckBox2.isSelected() && !jCheckBox3.isSelected() && !jCheckBox4.isSelected() && !jCheckBox5.isSelected()) {
            ofreceCatering = false;
            cat = new Catering(false, false, false, false);
        } else {
            ofreceCatering = true;
            boolean camareros = jCheckBox2.isSelected();
            boolean cocineros = jCheckBox1.isSelected();
            boolean decoracion = jCheckBox5.isSelected();
            boolean espacioPrivado = jCheckBox4.isSelected();
            if (jCheckBox3.isSelected()) {
                System.out.println("MAL");
                String comidaAProporcionar = jTextArea1.getText();
                Double precioFinal = MainManager.verificaPrecio(jPrecio.getText());

                //Validación Catering
                if (jCheckBox3.isSelected() && (precioFinal <= 0.0 || comidaAProporcionar.isEmpty())) {
                    JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos del Catering", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                //Catering
                cat = new Catering(comidaAProporcionar, precioFinal, camareros, cocineros, decoracion, espacioPrivado);
            } else {
                cat = new Catering(camareros, cocineros, decoracion, espacioPrivado);

            }

        }

        String mensaje = MainManager.verificaNumeroCalle(num);
        if (!mensaje.equals("")) {
            JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Comidas
        int listaComidas = jListComidas.getModel().getSize();
        if (listaComidas == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, introduzca como mínimo una comida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

//        //Menu
//        int listaMenus = jListMenus.getModel().getSize();
//        if (listaMenus == 0) {
//            JOptionPane.showMessageDialog(this, "Por favor, introduzca como mínimo un Menú", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
        if (nombreFotografia == null) {
            JOptionPane.showMessageDialog(this, "Por favor, introduzca una imagen", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Direccion dir = new Direccion(calle, num, codPostal, ciudad);
        if (nuevoRestaurante) {
            File directorio = new File("src/main/resources/otro/RESTAURANTE" + MainManager.getAvailableId());
            directorio.mkdir();
            File newFile = new File("src/main/resources/otro/RESTAURANTE" + MainManager.getAvailableId() + "/RESTAURANTE.jpg");
            try {
                newFile.createNewFile();
                String path = "src/main/resources/otro/RESTAURANTE" + MainManager.getAvailableId() + "/RESTAURANTE.jpg";
                Restaurante restaurante = new Restaurante(MainManager.getAvailableId(), cif, nombre, dir, especialidad, gastos, tiempo, ofreceCatering, cat, comidas, menus, path);
                MainManager.addRestaurante(restaurante);
                JOptionPane.showMessageDialog(this, "Restaurante guardado con éxito", "", JOptionPane.INFORMATION_MESSAGE);

            } catch (IOException ioe) {
                System.out.println("Error IO: " + ioe.toString());
            }

        } else {
            String path = "src/main/resources/otro/RESTAURANTE" + restauranteActual.getId() + "/RESTAURANTE.jpg";
            Restaurante restaurante = new Restaurante(restauranteActual.getId(), cif, nombre, dir, especialidad, gastos, tiempo, ofreceCatering, cat, comidas, menus, path);
            MainManager.addRestaurante(restaurante);
            MainManager.getRestaurantes().remove(restauranteActual);
            JOptionPane.showMessageDialog(this, "Restaurante guardado con éxito", "", JOptionPane.INFORMATION_MESSAGE);

        }


    }//GEN-LAST:event_jButtonGuardar1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            jScrollComida.setVisible(true);
            jTextArea1.setVisible(true);
            jSeparadorPrecio.setVisible(true);
            jPrecio.setVisible(true);
            txtPrecio.setVisible(true);
        } else {
            jScrollComida.setVisible(false);
            jTextArea1.setVisible(false);
            jSeparadorPrecio.setVisible(false);
            jPrecio.setVisible(false);
            txtPrecio.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrecioActionPerformed

    private void jCalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCalleActionPerformed

    private void jCodPostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCodPostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCodPostalActionPerformed

    private void jGastosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGastosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jGastosActionPerformed

    private void jCifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCifActionPerformed

    private void jNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNumActionPerformed

    private void jTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTiempoActionPerformed

    private void jButtonAnadirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirImagenActionPerformed
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.jpg", "jpg");
        fc.setFileFilter(filter);
        int selection = fc.showOpenDialog(this);
        if (selection == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            BufferedImage image;
            try {
                image = ImageIO.read(file);
            } catch (IOException e) {
                System.out.print("Error IO: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Elige una imagen válida", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            File outputImage;
            if (restauranteActual == null) {
                outputImage = new File("src/main/resources/otro/RESTAURANTE" + MainManager.getAvailableId() + ".jpg");
                nombreFotografia = "RESTAURANTE" + MainManager.getAvailableId() + ".jpg";
            } else {
                outputImage = new File("src/main/resources/otro/RESTAURANTE" + restauranteActual.getId() + ".jpg");
                nombreFotografia = "RESTAURANTE" + restauranteActual.getId() + ".jpg";
            }
            try {
                boolean write = ImageIO.write(image, "jpg", outputImage);
                System.out.println(write);
            } catch (IOException e) {
                System.out.print("Error IO: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Elige una imagen válida", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            ImageIcon icon = Restaurante.resizedIcon(jIcon.getBounds().width, jIcon.getBounds().height, file.getAbsolutePath());
            if (icon != null) {
                jIcon.setIcon(icon);
            }
        }
    }//GEN-LAST:event_jButtonAnadirImagenActionPerformed

    public int getAvailableIdComida() {
        ArrayList<Integer> ids = new ArrayList<>();
        for (Comida comida : comidas) {
            ids.add(comida.getId());
        }
        int i = 1;
        while (true) {
            if (!ids.contains(i)) {
                return i;
            }
            i++;
        }
    }

    public int getAvailableIdMenu() {
        ArrayList<Integer> ids = new ArrayList<>();
        for (Menu menu : menus) {
            ids.add(menu.getId());
        }
        int i = 1;
        while (true) {
            if (!ids.contains(i)) {
                return i;
            }
            i++;
        }
    }

    public void updateListaComidas() {
        ArrayList<String> lineasVenta = new ArrayList<>();
        for (Comida comida : comidas) {
            lineasVenta.add(comida.getTitulo() + " (" + comida.getId() + ") " + Double.valueOf(comida.getPrecioVenta()) + "€");
        }
        DefaultListModel<String> model = new DefaultListModel<String>();
        model.addAll(lineasVenta);
        jListComidas.setModel(model);
        jListComidas.revalidate();
        jListComidas.repaint();
    }

    public void updateListaMenus() {
        ArrayList<String> lineasVenta = new ArrayList<>();
        for (Menu menu : menus) {
            lineasVenta.add(menu.getNombre() + " (" + menu.getId() + ") " + Double.valueOf(menu.getPrecio()) + "€");
        }
        DefaultListModel<String> model = new DefaultListModel<>();
        model.addAll(lineasVenta);
        jListMenus.setModel(model);
        jListMenus.revalidate();
        jListMenus.repaint();
    }

    public void addtoListaComida(Comida comida) {
        comidas.add(comida);
        updateListaComidas();

    }

    public void addtoListaMenu(Menu menu) {
        menus.add(menu);
        updateListaMenus();

    }

    public Restaurante restaurante() {
        return restauranteActual;
    }

    private void txtexitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtexitMouseClicked
        MainManager.quit();
    }//GEN-LAST:event_txtexitMouseClicked

    private void txtexitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtexitMouseEntered
        txtexit.setForeground(Color.white);
    }//GEN-LAST:event_txtexitMouseEntered

    private void txtexitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtexitMouseExited
        txtexit.setForeground(Color.black);
    }//GEN-LAST:event_txtexitMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        MainManager.removeRestaurante(restauranteActual);
        JOptionPane.showMessageDialog(this, "Restaurante eliminado con éxito", "", JOptionPane.INFORMATION_MESSAGE);
        MainManager.showFrame("Administrador");
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonEliminarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarComidaActionPerformed
        String comidaEliminada = jListComidas.getSelectedValue();
        if (comidaEliminada == null) {
            JOptionPane.showMessageDialog(this, "Seleccione una comida para eliminar", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            File imagenComida = new File(comidas.get(jListComidas.getSelectedIndex()).getNombreFotografia());
            imagenComida.delete();
            comidas.remove(jListComidas.getSelectedIndex());
            updateListaComidas();

        }
    }//GEN-LAST:event_jButtonEliminarComidaActionPerformed

    private void jButtonAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirActionPerformed
        this.setVisible(false);
        AltaComida altaComida = new AltaComida(this);
        altaComida.setVisible(true);
    }//GEN-LAST:event_jButtonAnadirActionPerformed

    private void jButtonEliminarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarMenuActionPerformed
        String menuEliminado = jListMenus.getSelectedValue();
        if (menuEliminado == null) {
            JOptionPane.showMessageDialog(this, "Seleccione un menú para eliminar", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            File imagenMenu = new File(menus.get(jListMenus.getSelectedIndex()).getNombreFotografia());
            imagenMenu.delete();
            menus.remove(jListMenus.getSelectedIndex());
            updateListaMenus();

        }
    }//GEN-LAST:event_jButtonEliminarMenuActionPerformed

    private void jButtonAnadirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirMenuActionPerformed
        if (!comidas.isEmpty()) {
            this.setVisible(false);
            AltaMenu altaMenu = new AltaMenu(this);
            altaMenu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Para añadir un menú tiene que tener al menos dos comidas", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAnadirMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AltaRestaurante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JPanel exitpanel;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButtonAnadir;
    private javax.swing.JButton jButtonAnadirImagen;
    private javax.swing.JButton jButtonAnadirMenu;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonEliminarComida;
    private javax.swing.JButton jButtonEliminarMenu;
    private javax.swing.JButton jButtonGuardar1;
    private javax.swing.JTextField jCalle;
    private javax.swing.JLabel jCatering;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JFormattedTextField jCif;
    private javax.swing.JTextField jCiudad;
    private javax.swing.JFormattedTextField jCodPostal;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jGastos;
    private javax.swing.JLabel jIcon;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListComidas;
    private javax.swing.JList<String> jListMenus;
    private javax.swing.JTextField jNombre;
    private javax.swing.JFormattedTextField jNum;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField jPrecio;
    private javax.swing.JLabel jRestaurante;
    private javax.swing.JScrollPane jScrollComida;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparadorPrecio;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JFormattedTextField jTiempo;
    private javax.swing.JLabel javaeatlogo1;
    private javax.swing.JLabel txtCalle;
    private javax.swing.JLabel txtCategoria;
    private javax.swing.JLabel txtCif;
    private javax.swing.JLabel txtCiudad;
    private javax.swing.JLabel txtCodPostal;
    private javax.swing.JLabel txtGastos;
    private javax.swing.JLabel txtNombre;
    private javax.swing.JLabel txtNum;
    private javax.swing.JLabel txtPrecio;
    private javax.swing.JLabel txtTiempo;
    private javax.swing.JLabel txtexit;
    // End of variables declaration//GEN-END:variables
}
